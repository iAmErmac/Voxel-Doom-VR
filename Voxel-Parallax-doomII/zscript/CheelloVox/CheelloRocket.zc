//===========================================================================
//
// CHEELLO VOXEL DOOM
//
// ZScript code: Copyright (C) 2022 - 2024 Nash Muhandes
//
// License: GPL v3.0
//
//===========================================================================

//===========================================================================
//
// CheelloRocket
//
//===========================================================================

class CheelloRocket : Rocket replaces Rocket
{
	Default
	{
		// GZDoom's voxel drawer is glitchy when translucency is applied
		// (various depth sorting errors)
		// Therefore force non-translucency
		RenderStyle "Normal";
		Alpha 1;
		-DEHEXPLOSION
		-ZDOOMTRANS
	}

	override void PostBeginPlay(void)
	{
		// This is needed to make the rocket face the correct angle immediately upon spawning
		A_FaceMovementDirection();
		Super.PostBeginPlay();
	}

	private void A_SetExplosionVoxel(void)
	{
		sprite = !cheello_explosionvoxel ? GetSpriteIndex('MISL') : GetSpriteIndex('VISL');

		// respect ZDoom translucency options if in sprite form
		if (!cheello_explosionvoxel)
		{
			A_SetRenderStyle(1.0, STYLE_Add);
			bZDoomTrans = true;
		}
	}

	States
	{
	Spawn:
		MISL A 1 NoDelay Bright A_FaceMovementDirection();
		Loop;
	Death:
		#### B 0 A_SetExplosionVoxel();
		#### B 8 Bright A_Explode();
		#### C 6 Bright;
		#### D 4 Bright;
		Stop;
	BrainExplode:
		#### B 0 A_SetExplosionVoxel();
		#### BC 10 Bright;
		#### D 10 A_BrainExplode();
		Stop;
	}

	// sprite caching is needed to dynamically change sprites in A_SetExplosionVoxel
	States
	{
	SpriteCache:
		VISL A 0;
		MISL A 0;
		Stop;
	}
}
